{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFoundPg.js","App.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFoundPage","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1100be2d.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\">\n            <h1>Vladimir's Blog</h1>\n            <div className=\"links\">\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/create\">New Blog</Link>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import { Link } from \"react-router-dom\";\n\nconst BlogList = ({ blogs, title }) => {\n\n    return (\n        <div className=\"blog-list\">\n            <h2>{title}</h2>\n            {blogs.map((blog) => (\n                <div className=\"blog-preview\" key={blog.id}>\n                    <Link to={`/blogs/${blog.id}`}>\n                        <h2>{blog.title}</h2>\n                        <p>Written by {blog.author}</p>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default BlogList;","import {useState, useEffect} from 'react';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        //Used to stop the fetch and eliminate the warning error in console\n        const abortCont = new AbortController();\n\n        fetch(url, {signal: abortCont.signal})\n            .then(res => {\n                if(!res.ok) {\n                    throw Error('Could not fetch the data');\n                }\n                return res.json();\n            })\n            .then(data => {\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch(err => {\n                if(err.name === 'AbortError') {\n                    console.log('fetch aborted');\n                }\n                setError(err.message);\n                setIsPending(false);\n            })\n\n        return () => abortCont.abort();\n    }, [url])\n\n    return {data, isPending, error}\n}\n\nexport default useFetch;","import BlogList from './BlogList';\nimport useFetch from './useFetch';\n\nconst Home = () => {\n    const {data: blogs, isPending, error} = useFetch('http://localhost:8000/blogs');\n\n    return (\n        <div className=\"home\">\n            {error && <div>{error}</div>}\n            {isPending && <div>Loading...</div>}\n            {blogs && <BlogList blogs={blogs} title='All Blogs!' />}\n        </div>\n    );\n}\n\nexport default Home;","import { useState } from \"react\";\nimport {useHistory} from 'react-router-dom';\n\nconst Create = () => {\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const [author, setAuthor] = useState('');\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const blog = {title, body, author};\n\n        setIsPending(true);\n\n        // Used to post the new blog to the db.json file\n        fetch('http://localhost:8000/blogs', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(blog)\n        }).then(() => {\n            console.log('new blog added');\n            setIsPending(false);\n            // This will make the user go back one page\n            // history.go(-1);\n\n            // This will reroute to the home page\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"create\">\n            <h2>Add a New Blog</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Blog Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <label>Blog body:</label>\n                <textarea\n                    type=\"text\"\n                    required\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                ></textarea>\n                <label>Blog Author:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={author}\n                    onChange={(e) => setAuthor(e.target.value)}\n                ></input>\n                {/* Used to display to the user blog is being added */}\n                {!isPending && <button>Add Blog</button>}\n                {isPending && <button disabled>Adding Blog...</button>}\n                <p>{title}</p>\n                <p>{body}</p>\n                <p>{author}</p>\n            </form>\n        </div>\n    );\n}\n\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\nimport useFetch from './useFetch';\n\nconst BlogDetails = () => {\n    const { id } = useParams();\n    const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\n    const history = useHistory()\n\n    // Deletes blog upon click\n    const handleClick = () => {\n        fetch('http://localhost:8000/blogs/' + blog.id, {\n            method: 'DELETE'\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"blog-details\">\n            {isPending && <div>Loading...</div>}\n            {error && <div>{error}</div>}\n            {blog && (\n                <article>\n                    <h2>{blog.title}</h2>\n                    <p>Written by {blog.author}</p>\n                    <div>{blog.body}</div>\n                    <button onClick={handleClick}>delete</button>\n                </article>\n            )}\n        </div>\n    );\n}\n\nexport default BlogDetails;","import { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => {\n    return (\n        <div className=\"not-found\">\n            <h2>We Apologize...</h2>\n            <p>The page you are looking for cannot be found!</p>\n            <p>Click on the link below to be routed back to the main page</p>\n            <Link to='/'>Main Page...</Link>\n        </div>\n    );\n}\n\nexport default NotFoundPage;","import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFoundPage from './NotFoundPg';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create\">\n              <Create />\n            </Route>\n            <Route exact path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path='*'>\n              <NotFoundPage />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}